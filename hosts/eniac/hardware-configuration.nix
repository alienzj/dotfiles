# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];


  # Kernel
  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" "tun" "virtio" ];

  ## energy savings
    #"mitigations=off"
    #"mem_sleep_default=deep"
    #"pcie_aspm.policy=powersupersave"

  # https://discourse.nixos.org/t/external-mouse-and-keyboard-sleep-when-they-stay-untouched-for-a-few-seconds/14900/10
  boot.kernelParams = [ 
    #"usb.core.autosuspend=-1" # disable autosuspend
    #"usb.core.autosuspend=3600"  # 5 sencond # it seems no effect
  ];

  boot.extraModulePackages = [ ];
  #boot.extraModulePackages = with config.boot.kernelPackages; [ acpi_call ];

  boot.extraModprobeConfig = lib.mkMerge [ 
    "options kvm_amd nested=1"
    "options kvm_amd emulate_invalid_guest_state=0"
    "options kvm ignore_msrs=1"
  ];
  #boot.extraModprobeConfig = lib.mkMerge [
  #  # idle audio card after one second
  #  #"options snd_hda_amd power_save=1"
  #  # enable wifi power saving (keep uapsd off to maintain low latencies)
  #  #"options iwlwifi power_save=1 uapsd_disable=1"
  ##];

  #boot.crashDump.enable = true; # will build whole linux kernel, disable it

  services.fwupd.enable = true;

  # Hardware
  modules.hardware = {
    audio.enable = true;

    bluetooth.enable = true;
    fs = {
      enable = true;
      ssd.enable = true;
    };

    #sensors.enable = true;

    nvidia.enable = true;

    #https://discourse.nixos.org/t/usb-mouse-and-keyboard-poweroff-too-soon-udev/22459
    power.enable = true; # install powertop

    mouse.enable = true;

    # USB
    # Don't let USB devices wake the computer from sleep.
    #usb.wakeupDisabled = [
    #  #{
    #    # Holtek Semiconductor Keyboard
    #    #vendor = "04d9";
    #    #product = "0209";
    #  #}
    #  {
    #    # Razer Abyssus 2000
    #    vendor = "1532";
    #    product = "005e";
    #    wakeup = false;
    #  }
    #];

    # Set usb autosuspend to On
    #usb.autosuspendAlwaysOn = [
    #  {
    #    # Holtek Semiconductor Keyboard
    #    vendor = "04d9";
    #    product = "0209";
    #    autosuspendOn = true;
    #  }
    #  {
    #    # Razer Abyssus 2000
    #    vendor = "1532";
    #    product = "005e";
    #    autosuspendOn = true;
    #  }
    #];
  };

  services.udev.extraRules = ''
    # keyboard autosuspand
    #ACTION=="add", SUBSYSTEM=="usb", ATTR{idVendor}=="04d9", ATTR{idProduct}=="0209", ATTR{power/autosuspend}="-1"
    ACTION=="add", SUBSYSTEM=="usb", ATTR{idVendor}=="04d9", ATTR{idProduct}=="0209", ATTR{power/control}="on"
    ACTION=="add", SUBSYSTEM=="usb", ATTR{idVendor}=="04d9", ATTR{idProduct}=="0209", ATTR{power/autosuspend_delay_ms}="720000"

    # mouse autosuspand
    #ACTION=="add", SUBSYSTEM=="usb", ATTR{idVendor}=="1532", ATTR{idProduct}=="005e", ATTR{power/autosuspend}="-1"
    ACTION=="add", SUBSYSTEM=="usb", ATTR{idVendor}=="1532", ATTR{idProduct}=="005e", ATTR{power/control}="on"
    ACTION=="add", SUBSYSTEM=="usb", ATTR{idVendor}=="1532", ATTR{idProduct}=="005e", ATTR{power/autosuspend_delay_ms}="720000"
  '';

  # CPU
  nix.settings.max-jobs = lib.mkDefault 16;
  hardware.cpu.amd.updateMicrocode = true;

  # Power management
  environment.systemPackages = [ pkgs.acpi ];
  #services.upower.enable = true;
  powerManagement = {
    enable = true;
    cpuFreqGovernor = lib.mkDefault "performance";
    powertop.enable = true;
  };
  services.thermald.enable = true;

  #services.tlp = {
  #    enable = true;
  #    settings = {
  #      CPU_SCALING_GOVERNOR_ON_AC = "performance";
  #      CPU_SCALING_GOVERNOR_ON_BAT = "powersave";

  #      CPU_ENERGY_PERF_POLICY_ON_BAT = "power";
  #      CPU_ENERGY_PERF_POLICY_ON_AC = "performance";

  #      CPU_MIN_PERF_ON_AC = 0;
  #      CPU_MAX_PERF_ON_AC = 100;
  #      CPU_MIN_PERF_ON_BAT = 0;
  #      CPU_MAX_PERF_ON_BAT = 20;

  #     #Optional helps save long term battery health
  #     START_CHARGE_THRESH_BAT0 = 40; # 40 and bellow it starts to charge
  #     STOP_CHARGE_THRESH_BAT0 = 80; # 80 and above it stops charging
  #    };
  #};

  #services.auto-cpufreq = {
  #  enable = true;
  #  settings = {
  #    battery = {
  #      governor = "powersave";
  #      turbo = "never";
  #    };
  #    charger = {
  #      governor = "performance";
  #      turbo = "auto";
  #    };
  #  };
  #};

  # screen brightness
  #programs.light.enable = true;
  #services.actkbd = {
  #  enable = true;
  #  bindings = [
  #    #{ keys = [ 224 ]; events = [ "key" ]; command = "/run/current-system/sw/bin/light -A 10"; }
  #    #{ keys = [ 225 ]; events = [ "key" ]; command = "/run/current-system/sw/bin/light -U 10"; }
  #    { keys = [ 63 ]; events = [ "key" ]; command = "/run/current-system/sw/bin/light -U 10"; }
  #    { keys = [ 64 ]; events = [ "key" ]; command = "/run/current-system/sw/bin/light -A 10"; }
  #  ];
  #};


  # Displays
  services.xserver = {
    enable = true;
    #videoDrivers = [ "modesetting" ];
    #videoDrivers = [ "nvidia" ];
    dpi = 168;
    exportConfiguration = true;
    xkb.layout = "us";
    #xkbOptions = "compose:caps";

  };

  services.libinput = {
    enable = true;
    #touchpad = {
    #  tapping = true;
    #  clickMethod = "clickfinger";
    #  naturalScrolling = true;
    #};
  };
 
  console.font =
    "${pkgs.terminus_font}/share/consolefonts/ter-u28n.psf.gz";

  # high-resolution display
  #hardware.video.hidpi.enable = lib.mkDefault true;
  #fonts.optimizeForVeryHighDPI = false;

  environment.variables = {
    # QT method manually
    ##QT_SCALE_FACTOR = "2";
    QT_SCREEN_SCALE_FACTORS = "2;2";
    QT_AUTO_SCREEN_SCALE_FACTOR = "0";

    # QT method automatically:
    #QT_AUTO_SCREEN_SCALE_FACTOR = "1";

    GDK_SCALE = "2";
    GDK_DPI_SCALE = "0.5";
    _JAVA_OPTIONS = "-Dsun.java2d.uiScale=2";
  };


  # Filesystem
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/952cf267-a657-4abb-b121-5bebf3a103aa";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/C247-75AF";
      fsType = "vfat";
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/0dcf7734-5d12-4b60-8632-6a75196a31a7";
      fsType = "ext4";
    };

  fileSystems."/mnt/store" =
    { device = "/dev/disk/by-uuid/294a32c8-a7ab-4646-86c4-277dafc708b7";
      fsType = "ext4";
    };

  swapDevices = 
    [ { device = "/dev/disk/by-uuid/e7e56401-3b27-4cb8-852b-9cc971f63512"; }
    ];


  # Networking
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.

  networking = {
    #useDHCP = lib.mkDefault true;
    interfaces = {
      enp4s0.useDHCP = true;
    };
 
    #wireless = {
    #  interfaces = [ "wlan0" ];
    #  iwd = {
    #    enable = true; 
    #	 settings = {
    #      Network = {
    #        EnableIPv6 = true;
    # 	     RoutePriorityOffset = 300;
    #  	   };
    # 	   Settings = {
    #        AutoConnect = true;
    #	     #Hidden = false;
    #	     #AlwaysRandomizeAddress = false;
    #      };
    #	 };
    #  };
    #}; 

    networkmanager = {
      enable = true;
      #wifi.backend = "iwd";
      plugins = with pkgs; [
        networkmanager-fortisslvpn
        networkmanager-iodine
        networkmanager-l2tp
        networkmanager-openconnect
        networkmanager-openvpn
        networkmanager-vpnc
        networkmanager-sstp
      ];
    };
  
    firewall = {
      enable = true;
      allowedTCPPorts = [ 22 80 443 3389 8080 ];
      allowedUDPPorts = [ 22 80 443 3389 8080 ];
      #allowedUDPPortRanges = [
      #  { from = 4000; to = 4007; }
      #  { from = 8000; to = 8010; }
      #];
    };
  };

  #system.activationScripts = {
  #  rfkillUnblockBluetooth = {
  #    text = ''
  #    rfkill unblock bluetooth
  #    '';
  #    deps = [];
  #  };
  #};


  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  users.users.alienzj.extraGroups = [ "tss" "video" ];
}
