# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "amdgpu" ];
  boot.kernelModules = [ "kvm-amd" "tun" "virtio" "acpi_call" ];

  ## https://kvark.github.io/linux/framework/2021/10/17/framework-nixos.html
  #boot.kernelParams = [ "mem_sleep_default=deep" ];
  ## energy savings
  boot.kernelParams = ["mem_sleep_default=deep" "pcie_aspm.policy=powersupersave"];

  boot.extraModulePackages = with config.boot.kernelPackages; [ acpi_call ];

  boot.extraModprobeConfig = lib.mkMerge [
    # idle audio card after one second
    "options snd_hda_intel power_save=1"
    # enable wifi power saving (keep uapsd off to maintain low latencies)
    "options iwlwifi power_save=1 uapsd_disable=1"

    # OSX-KVM
    "options kvm_intel nested=1"
    "options kvm_intel emulate_invalid_guest_state=0"
    "options kvm ignore_msrs=1"
  ];

  #boot.supportedFilesystems = [ "ntfs" ];

  #https://discourse.nixos.org/t/laptop-suspend-fails/4739
  services.fwupd.enable = true;

  # https://github.com/NixOS/nixos-hardware/blob/master/common/gpu/amd/default.nix

  hardware.opengl.extraPackages = with pkgs; [
    vaapiVdpau
    libvdpau-va-gl
    rocm-opencl-icd
    rocm-opencl-runtime
    amdvlk
  ];

  hardware.opengl.extraPackages32 = with pkgs; [
    driversi686Linux.amdvlk
  ];

  hardware.opengl = {
    driSupport = true;
    driSupport32Bit = true;
  };

  environment.variables.AMD_VULKAN_ICD = lib.mkDefault "RADV";

  # ssd
  services.fstrim.enable = lib.mkDefault true;

  # Modules
  modules.hardware = {
    audio.enable = true;
    bluetooth.enable = true;
    fs = {
      enable = true;
      ssd.enable = true;
    };
    #sensors.enable = true;
  };

  # CPU
  nix.settings.max-jobs = lib.mkDefault 8;
  #powerManagement.cpuFreqGovernor = "performance";
  #powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";

  ## https://github.com/NixOS/nixpkgs/blob/master/nixos/modules/config/power-management.nix
  ## https://discourse.nixos.org/t/thinkpad-t470s-power-management/8141/3
  services.tlp = {
    enable = true;
    settings = {
      CPU_SCALING_GOVERNOR_ON_AC = "performance";
      CPU_SCALING_GOVERNOR_ON_BAT = "powersave";
    };
  };
  services.upower.enable = true;

  ## https://github.com/kvark/dotfiles/blob/master/nix/hardware-configuration.nix
  powerManagement = {
    enable = true;
    powertop.enable = true;
    cpuFreqGovernor = lib.mkDefault "ondemand";
  };

  #hardware.cpu.amd.updateMicrocode = true;

  networking.wireless.interfaces = [ "wlp1s0" ];

  # Displays
  services.xserver = {
    enable = true;
    videoDrivers = [ "amdgpu" ];
    dpi = 168;
    exportConfiguration = true;
    layout = "us";
    #xkbOptions = "compose:caps";

    libinput = {
      enable = true;
      touchpad = {
        tapping = true;
        clickMethod = "clickfinger";
      	naturalScrolling = true;
      };
    };
  };


  console.font =
    "${pkgs.terminus_font}/share/consolefonts/ter-u28n.psf.gz";

  # reference
  # https://wiki.archlinuxcn.org/zh-hans/HiDPI
  environment.variables = {
    # QT method: manually
    ##QT_SCALE_FACTOR = "2";
    QT_SCREEN_SCALE_FACTORS = "2;2";
    QT_AUTO_SCREEN_SCALE_FACTOR = "0";

    # QT method: automatically
    #QT_AUTO_SCREEN_SCALE_FACTOR = "1";

    # GTK
    GDK_SCALE = "2";
    GDK_DPI_SCALE = "0.5";
    _JAVA_OPTIONS = "-Dsun.java2d.uiScale=2";
  };

  # Storage
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f53e0fc6-5d76-4106-a106-558af7be7d16";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/6018-D534";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/bfc2ce50-8fd6-4aa8-9c8f-375dbed9e357"; }
    ];


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0f4u1u3.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  #hardware.cpu.amd.updateMicrocode = true;

  # high-resolution display
  #hardware.video.hidpi.enable = true;
  #fonts.optimizeForVeryHighDPI = false;
  hardware.sensor.iio.enable = true;
}
