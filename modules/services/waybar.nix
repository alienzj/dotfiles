{
  hey,
  lib,
  config,
  options,
  pkgs,
  ...
}:
with lib;
with hey.lib; let
  cfg = config.modules.services.waybar;
in {
  options.modules.services.waybar = with types; {
    enable = mkBoolOpt false;
    package = mkOpt package pkgs.waybar;
    settings = mkOpt (attrsOf attrs) {};
    primaryMonitor = mkOpt str "";
  };

  config = mkIf cfg.enable {
    assertions = [
      {
        assertion = config.modules.desktop.type == "wayland";
        message = "swayidle requires a wayland desktop";
      }
    ];

    nixpkgs.overlays = [
      # REVIEW: Latest version of hyprland changed where its socket lives, but
      #   waybar on nixpkgs hasn't asborbed the fix yet (see
      #   Alexays/Waybar#3158). Also, waybar's flake is broken, so we can't use
      #   its overlays directly (see Alexays/Waybar#3196).
      (prev: final: {
        waybar = hey.inputs.waybar.packages.${final.system}.default;
      })
    ];

    programs.waybar.enable = true;

    hey.hooks.reload."98-waybar" = ''
      hey.do systemctl --user restart waybar.service
    '';

    home.configFile."waybar/config".text = ''
      // -*- mode: js-json -*-
      // This was automatically generated by NixOS and my dotfiles
      ${toPrettyJSON
        (mapAttrsToList
          (name: v:
            mergeAttrs' [
              {
                inherit name;
                output = [cfg.primaryMonitor];
                include = ["${hey.configDir}/waybar/config"];
              }
              v
            ])
          cfg.settings)}
    '';
  };
}
